{"version":3,"sources":["reportWebVitals.js","component/App.js","component/cardList.js","component/searchBox.js","component/scrolls.js","container/App2.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","props","className","src","id","name","email","CardList","robot","cardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","App2","onSearchChange","event","setState","target","value","state","robots","fetch","res","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mDCUCQ,EAdJ,SAACC,GACR,OACE,sBAAKC,UAAU,qDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,mBACR,gCAEE,6BAAKH,EAAMI,OACX,kCAAKJ,EAAMK,gBCONC,EAbE,SAAC,GAAY,IAAXC,EAAU,EAAVA,MACTC,EAAgBD,EAAME,KAAI,SAACC,EAAKC,GAClC,OAAO,cAAC,EAAD,CAAaR,GAAMI,EAAMI,GAAGR,GACvBC,KAAQG,EAAMI,GAAGP,KACjBC,MAASE,EAAMI,GAAGN,OAFbM,MAIrB,OACI,8BACEH,KCEKI,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKb,UAAU,MAAf,SACI,uBAAOA,UAAU,gCAAgCc,KAAK,SACtDC,YAAY,gBACZC,SAAWH,OCGRI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKtB,EAAMuB,YCwCJC,G,wDAvCX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAdxC,EAAKC,MAAO,CACRC,OAAO,GACPlB,YAAY,IAJP,E,qDAOb,WAAoB,IAAD,OACfmB,MAAM,8CACLvC,MAAK,SAAAwC,GACF,OAAOA,EAAIC,UACZzC,MAAK,SAAA0C,GACJ,EAAKR,SAAS,CAACI,OAAOI,S,oBAM9B,WAAS,IAAD,EACyBC,KAAKN,MAA3BC,EADH,EACGA,OAAOlB,EADV,EACUA,YACRwB,EAAiBN,EAAOO,QAAO,SAAAP,GACjC,OAAOA,EAAO3B,KAAKmC,cAAcC,SAAS3B,EAAY0B,kBAExD,OAA+B,IAA5BH,KAAKN,MAAMC,OAAOU,OACV,yCAGL,sBAAKxC,UAAU,KAAf,UACI,8CACA,cAAC,EAAD,CAAWa,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,MAAS8B,a,GAhCxBK,cCKnBC,IAASC,OACP,8BACE,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM3BxD,M","file":"static/js/main.a83196e1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './App.css';\n\nconst App =(props)=>{\n    return (\n      <div className=\"bg-light-green dib br-3 pa-3 ma2 grow bw2 shadow-5\">\n        <img src={`https://robohash.org/${props.id}?size=200x200`}/>\n        <div>\n          \n          <h2>{props.name}</h2>\n          <p> {props.email}</p>\n        </div>\n      </div>\n    );\n  }\n\n\nexport default App;\n","import React from 'react';\r\nimport App from './App';\r\n\r\n\r\nconst CardList = ({robot}) =>{\r\n    const cardComponent = robot.map((user,i)=>{\r\n        return <App key={i} id = {robot[i].id}\r\n                    name = {robot[i].name}\r\n                    email = {robot[i].email}/>\r\n                })\r\n    return(\r\n        <div>\r\n         {cardComponent}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardList ;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input className=\"pa3 ba b--green bg-light-blue\" type=\"search\" \r\n            placeholder='search robots'\r\n            onChange= {searchChange}\r\n            />\r\n           \r\n        </div>\r\n            \r\n    )\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflow: 'scroll', border: '2px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Scroll ;","import React,{Component} from 'react';\r\nimport CardList from '../component/cardList';\r\nimport SearchBox from '../component/searchBox';\r\nimport Scroll from '../component/scrolls';\r\nimport './app2.css'\r\nclass App2 extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            robots:[],\r\n            searchfield:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res =>{\r\n            return res.json();\r\n        }).then(users =>{\r\n            this.setState({robots:users})\r\n        })\r\n    }\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchfield:event.target.value})\r\n    }\r\n    render(){\r\n        const {robots,searchfield} = this.state ;\r\n        const filteredRobots = robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n          })\r\n          if(this.state.robots.length ===0){\r\n              return <h1>Loading</h1>\r\n          }else{\r\n            return(\r\n                <div className=\"tc\">\r\n                    <h1>Robo friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robot = {filteredRobots}/>\r\n                    </Scroll>\r\n                </div>\r\n                \r\n            );\r\n          }\r\n}\r\n} \r\nexport default App2;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'tachyons';\nimport App2 from './container/App2';\n\n\n\nReactDOM.render(\n  <div >\n    <App2/>\n  </div>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}